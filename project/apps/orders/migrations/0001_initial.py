# Generated by Django 4.0.4 on 2022-05-20 18:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supplies', '0001_initial'),
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConcreteOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lots', models.CharField(help_text='separate each lot with a comma, ex "15446, 4789, 14,2546"', max_length=150, verbose_name='lots')),
                ('needs_pump', models.BooleanField(default=False, verbose_name='pump required?')),
                ('etotal', models.SmallIntegerField(verbose_name='estimated total')),
                ('atotal', models.SmallIntegerField(blank=True, null=True, verbose_name='actual total')),
                ('qordered', models.SmallIntegerField(blank=True, null=True, verbose_name='total ordered')),
                ('date_needed', models.DateField(blank=True, null=True, verbose_name='date needed')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('po', models.CharField(blank=True, max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='purchase order')),
                ('builder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builder_concrete_orders', to='clients.client', verbose_name='builder')),
                ('dispatcher', models.ForeignKey(limit_choices_to={'groups__name': 'Dispatchers'}, on_delete=django.db.models.deletion.PROTECT, related_name='corders_accepted', to=settings.AUTH_USER_MODEL, verbose_name='dispatcher')),
            ],
            options={
                'verbose_name': 'concrete order',
                'verbose_name_plural': 'concrete orders',
                'db_table': 'orders_concrete',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GravelOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(blank=True, max_length=50, null=True, verbose_name='priority')),
                ('lots', models.CharField(help_text='separate lots with a comma. Example: "1547 Cherrywood St, 1549 Cherrywood St, 2867 Flintwood Cir', max_length=150, verbose_name='lots')),
                ('bsdt', models.CharField(choices=[('b/s', 'b/s'), ('d/t', 'd/t')], max_length=3, verbose_name='B/S D/T')),
                ('po', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('[[\\S\\w]')], verbose_name='purchase order')),
                ('need_by', models.DateField(blank=True, null=True, verbose_name='date needed')),
                ('rloads', models.SmallIntegerField(blank=True, null=True, verbose_name='loads requested')),
                ('dloads', models.SmallIntegerField(default=0, verbose_name='loads delivered')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('placed', 'Placed'), ('canceled', 'Canceled'), ('completed', 'Completed')], default='pending', max_length=10, verbose_name='status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('ordered_on', models.DateTimeField(blank=True, null=True, verbose_name='ordered on')),
                ('builder', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, related_name='builder_gravel_orders', to='clients.client', verbose_name='builder')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gravel_order_items', to='supplies.gravelitem', verbose_name='item')),
                ('site', models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='site_gravel_deliveries', to='clients.site', verbose_name='site')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='supplies.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'gravel order',
                'verbose_name_plural': 'gravel orders',
                'db_table': 'orders_gravel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PumpOrder',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True, verbose_name='purchase order')),
                ('po', models.BigIntegerField(unique=True, verbose_name='PO')),
                ('description', models.TextField(blank=True, null=True, verbose_name='additional info')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('builder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pump_orders', to='clients.client', verbose_name='builder')),
                ('pump_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pump_orders', to='supplies.supplier', verbose_name='pump supplier')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.site', verbose_name='Subdivision')),
            ],
            options={
                'verbose_name': 'pump rental',
                'verbose_name_plural': 'pump rentals',
                'db_table': 'orders_concrete_pumps',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PumpOrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pump_order_notes', to='orders.pumporder', verbose_name='pump order')),
            ],
            options={
                'verbose_name': 'order note',
                'verbose_name_plural': 'order notes',
                'db_table': 'orders_pump_order_notes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalPumpOrderNote',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.pumporder', verbose_name='pump order')),
            ],
            options={
                'verbose_name': 'historical order note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPumpOrder',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True, verbose_name='purchase order')),
                ('po', models.BigIntegerField(db_index=True, verbose_name='PO')),
                ('description', models.TextField(blank=True, null=True, verbose_name='additional info')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='created on')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='updated on')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('builder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.client', verbose_name='builder')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pump_supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplies.supplier', verbose_name='pump supplier')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.site', verbose_name='Subdivision')),
            ],
            options={
                'verbose_name': 'historical pump rental',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGravelOrderNote',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.gravelorder', verbose_name='gravel order')),
            ],
            options={
                'verbose_name': 'historical order note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGravelOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('priority', models.CharField(blank=True, max_length=50, null=True, verbose_name='priority')),
                ('lots', models.CharField(help_text='separate lots with a comma. Example: "1547 Cherrywood St, 1549 Cherrywood St, 2867 Flintwood Cir', max_length=150, verbose_name='lots')),
                ('bsdt', models.CharField(choices=[('b/s', 'b/s'), ('d/t', 'd/t')], max_length=3, verbose_name='B/S D/T')),
                ('po', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('[[\\S\\w]')], verbose_name='purchase order')),
                ('need_by', models.DateField(blank=True, null=True, verbose_name='date needed')),
                ('rloads', models.SmallIntegerField(blank=True, null=True, verbose_name='loads requested')),
                ('dloads', models.SmallIntegerField(default=0, verbose_name='loads delivered')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('placed', 'Placed'), ('canceled', 'Canceled'), ('completed', 'Completed')], default='pending', max_length=10, verbose_name='status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='created on')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='updated on')),
                ('ordered_on', models.DateTimeField(blank=True, null=True, verbose_name='ordered on')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('builder', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.client', verbose_name='builder')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplies.gravelitem', verbose_name='item')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.site', verbose_name='site')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplies.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'historical gravel order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConcreteOrderNote',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.concreteorder', verbose_name='concrete order')),
            ],
            options={
                'verbose_name': 'historical order note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConcreteOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('lots', models.CharField(help_text='separate each lot with a comma, ex "15446, 4789, 14,2546"', max_length=150, verbose_name='lots')),
                ('needs_pump', models.BooleanField(default=False, verbose_name='pump required?')),
                ('etotal', models.SmallIntegerField(verbose_name='estimated total')),
                ('atotal', models.SmallIntegerField(blank=True, null=True, verbose_name='actual total')),
                ('qordered', models.SmallIntegerField(blank=True, null=True, verbose_name='total ordered')),
                ('date_needed', models.DateField(blank=True, null=True, verbose_name='date needed')),
                ('date_created', models.DateTimeField(blank=True, editable=False, verbose_name='created on')),
                ('po', models.CharField(blank=True, db_index=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='purchase order')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('builder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.client', verbose_name='builder')),
                ('dispatcher', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'groups__name': 'Dispatchers'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='dispatcher')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pump', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='orders.pumporder', verbose_name='')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.site', verbose_name='site')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplies.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'historical concrete order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GravelOrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gravel_order_notes', to='orders.gravelorder', verbose_name='gravel order')),
            ],
            options={
                'verbose_name': 'order note',
                'verbose_name_plural': 'order notes',
                'db_table': 'orders_gravel_order_notes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FootingsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('garage', models.CharField(blank=True, choices=[('None', 'None'), ("4'", "4'"), ("8'", "8'"), ("9'", "9'")], default='None', max_length=4, null=True, verbose_name='garage size')),
                ('wea', models.CharField(blank=True, max_length=50, null=True, verbose_name='walkout egress area')),
                ('note', models.TextField(blank=True, null=True, verbose_name='additional information')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='footings_items', to='orders.concreteorder', verbose_name='order')),
            ],
            options={
                'verbose_name': 'footings item',
                'verbose_name_plural': 'footings items',
                'db_table': 'orders_concrete_order_footing_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FlatworkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='item description')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.concreteorder', verbose_name='order')),
            ],
            options={
                'verbose_name': 'flatwork item',
                'verbose_name_plural': 'flatwork items',
                'db_table': 'orders_concrete_flatwork_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConcreteType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mix', models.CharField(choices=[('rich', 'rich'), ('standard', 'standard'), ('medium', 'medium'), ('lean', 'lean')], default='standard', max_length=10, verbose_name='mix')),
                ('slump', models.CharField(max_length=6, verbose_name='slump')),
                ('note', models.TextField(blank=True, max_length=250, null=True, verbose_name='note')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concrete_supplies', to='orders.concreteorder', verbose_name='concrete orders')),
            ],
            options={
                'verbose_name': 'Concrete Type',
                'verbose_name_plural': 'Concrete Types',
                'db_table': 'supplies_concrete_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConcreteOrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=150, verbose_name='Note')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concrete_order_notes', to='orders.concreteorder', verbose_name='concrete order')),
            ],
            options={
                'verbose_name': 'order note',
                'verbose_name_plural': 'order notes',
                'db_table': 'orders_concrete_order_notes',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='pump',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concrete_order', to='orders.pumporder', verbose_name=''),
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_concrete_orders', to='clients.site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supplier_concrete_orders', to='supplies.supplier', verbose_name='supplier'),
        ),
    ]
