# Generated by Django 4.0.3 on 2022-03-26 16:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gravel', '0001_initial'),
        ('suppliers', '0001_initial'),
        ('clients', '0001_initial'),
        ('sites', '0001_initial'),
        ('concrete', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConcreteOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lots', models.CharField(help_text='separate each lot with a comma, ex "15446, 4789, 14,2546"', max_length=150, verbose_name='lots')),
                ('etotal', models.SmallIntegerField(verbose_name='estimated total')),
                ('atotal', models.SmallIntegerField(blank=True, null=True, verbose_name='actual total')),
                ('qordered', models.SmallIntegerField(verbose_name='total ordered')),
                ('po', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='purchase order')),
                ('date_needed', models.DateTimeField(blank=True, null=True, verbose_name='order date')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('builder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builder_concrete_orders', to='clients.buildermodel', verbose_name='builder')),
                ('cinfo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='concrete.concretetype', verbose_name='concrete info')),
                ('dispatcher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='corders_accepted', to=settings.AUTH_USER_MODEL, verbose_name='dispatcher')),
            ],
            options={
                'verbose_name': 'concrete order',
                'verbose_name_plural': 'concrete orders',
                'db_table': 'orders_concrete',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FlatworkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='item description')),
            ],
            options={
                'verbose_name': 'flatwork item',
                'verbose_name_plural': 'flatwork items',
                'db_table': 'orders_concrete_flatwork_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InspectionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('name', models.CharField(max_length=50, verbose_name='agency name')),
                ('agent', models.CharField(max_length=50, verbose_name='inspector name')),
                ('inspection_date', models.DateTimeField(verbose_name='inspection time')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.notemodel', verbose_name='inspection note')),
            ],
            options={
                'verbose_name': 'inspection agency',
                'verbose_name_plural': 'inspection agencies',
                'db_table': 'orders_inspection_agency',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalInspectionModel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('name', models.CharField(max_length=50, verbose_name='agency name')),
                ('agent', models.CharField(max_length=50, verbose_name='inspector name')),
                ('inspection_date', models.DateTimeField(verbose_name='inspection time')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('note', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.notemodel', verbose_name='inspection note')),
            ],
            options={
                'verbose_name': 'historical inspection agency',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGravelOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('po', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('priority', models.CharField(max_length=50, verbose_name='priority')),
                ('lot', models.CharField(help_text='separate lots with a comma example: "1547, 78966, 251, 789665" ', max_length=150, verbose_name='lots')),
                ('bsdt', models.CharField(blank=True, max_length=50, null=True, verbose_name='B/S D/T')),
                ('need_by', models.DateField(verbose_name='date needed')),
                ('rloads', models.SmallIntegerField(verbose_name='loads requested')),
                ('dloads', models.SmallIntegerField(default=0, verbose_name='loads delivered')),
                ('ddate', models.DateTimeField(blank=True, null=True, verbose_name='delivery date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gravel.stonetype', verbose_name='stone type')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'historical Gravel Order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConcreteOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('lots', models.CharField(help_text='separate each lot with a comma, ex "15446, 4789, 14,2546"', max_length=150, verbose_name='lots')),
                ('etotal', models.SmallIntegerField(verbose_name='estimated total')),
                ('atotal', models.SmallIntegerField(blank=True, null=True, verbose_name='actual total')),
                ('qordered', models.SmallIntegerField(verbose_name='total ordered')),
                ('po', models.CharField(db_index=True, max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='purchase order')),
                ('date_needed', models.DateTimeField(blank=True, null=True, verbose_name='order date')),
                ('date_created', models.DateTimeField(blank=True, editable=False, verbose_name='created on')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('builder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clients.buildermodel', verbose_name='builder')),
                ('cinfo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='concrete.concretetype', verbose_name='concrete info')),
                ('dispatcher', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='dispatcher')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.sitemodel', verbose_name='site')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'historical concrete order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GravelOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('priority', models.CharField(max_length=50, verbose_name='priority')),
                ('lot', models.CharField(help_text='separate lots with a comma example: "1547, 78966, 251, 789665" ', max_length=150, verbose_name='lots')),
                ('bsdt', models.CharField(blank=True, max_length=50, null=True, verbose_name='B/S D/T')),
                ('need_by', models.DateField(verbose_name='date needed')),
                ('rloads', models.SmallIntegerField(verbose_name='loads requested')),
                ('dloads', models.SmallIntegerField(default=0, verbose_name='loads delivered')),
                ('ddate', models.DateTimeField(blank=True, null=True, verbose_name='delivery date')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gravel.stonetype', verbose_name='stone type')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='suppliers.supplier', verbose_name='supplier')),
            ],
            options={
                'verbose_name': 'Gravel Order',
                'verbose_name_plural': 'Gravel Orders',
                'db_table': 'orders_gravel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FootingsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('garage', models.CharField(blank=True, choices=[(None, None), ("4'", "4'"), ("8'", "8'"), ("9'", "9'")], default=None, max_length=3, null=True, verbose_name='garage size')),
                ('wea', models.CharField(blank=True, max_length=50, null=True, verbose_name='walkout egress area')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.notemodel', verbose_name='footings note')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='footings_items', to='orders.concreteorder', verbose_name='order')),
            ],
            options={
                'verbose_name': 'footings item',
                'verbose_name_plural': 'footings items',
                'db_table': 'orders_concrete_order_footing_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FlatworkOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concrete_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='flatwork_items', related_query_name='order_item', to='orders.concreteorder', verbose_name='concrete order')),
                ('flatwork_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_orders', related_query_name='item_order', to='orders.flatworkitem', verbose_name='flatwork item')),
            ],
            options={
                'verbose_name': 'flatwork items',
                'db_table': 'orders_concrete_flatwork_order_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConcreteOrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concrete_order_notes', to='core.notemodel', verbose_name='concrete order note')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concrete_orders', to='orders.concreteorder', verbose_name='concrete order')),
            ],
            options={
                'verbose_name': 'order note',
                'verbose_name_plural': 'order notes',
                'db_table': 'orders_concrete_order_notes',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='f_items',
            field=models.ManyToManyField(through='orders.FlatworkOrderItems', to='orders.flatworkitem', verbose_name='flatwork items'),
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='order_notes',
            field=models.ManyToManyField(through='orders.ConcreteOrderNote', to='core.notemodel', verbose_name='notes'),
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_concrete_orders', to='sites.sitemodel', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='concreteorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_concrete_orders', to='suppliers.supplier', verbose_name='supplier'),
        ),
    ]
