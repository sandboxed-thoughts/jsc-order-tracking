# Generated by Django 4.0.3 on 2022-03-08 19:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('suppliers', '0001_initial'),
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='order notes')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalOrderNotes',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='order notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical order notes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGravel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bldr', models.CharField(max_length=50, verbose_name='Builder')),
                ('lot', models.CharField(help_text='separate multiple lots with a comma (,)', max_length=100, verbose_name='Lot Numbers')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('qord', models.PositiveIntegerField(verbose_name='Quantity Ordered')),
                ('qtype', models.CharField(choices=[('Large Loads', (('loads', 'loads'), ('cu yd', 'cu yd'), ('sqft', 'sqft'))), ('lbs', 'lbs'), ('bags', 'bags')], default='loads', max_length=5, verbose_name='Quantity Type')),
                ('etot', models.PositiveIntegerField(help_text='leave blank if same as quantity ordered', verbose_name='Estimated Total')),
                ('atot', models.PositiveIntegerField(blank=True, null=True, verbose_name='Actual Total')),
                ('incw', models.CharField(choices=[('none', 'none'), ('rain', 'rain'), ('snow', 'snow')], default='none', max_length=4, verbose_name='Inclimate Weather')),
                ('temp', models.CharField(choices=[('average', 'average'), ('low', 'low'), ('high', 'high')], default='average', max_length=7, verbose_name='Temperature')),
                ('odate', models.DateField(blank=True, editable=False, verbose_name='Date Ordered')),
                ('ndate', models.DateField(blank=True, null=True, verbose_name='Date Needed')),
                ('ddate', models.DateField(blank=True, null=True, verbose_name='Delivery / Pour Date')),
                ('crew', models.CharField(blank=True, max_length=50, null=True, verbose_name='Delivery / Pour Crew')),
                ('po', models.CharField(help_text='PO / order number', max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('progress', models.CharField(choices=[('will call', 'will call'), ('scheduled', 'scheduled'), ('canceled', 'cncl'), ('released', 'rlsd'), ('complete', 'complete')], default='will call', max_length=10, verbose_name='Order Progress')),
                ('caller', models.CharField(max_length=50, verbose_name='Caller')),
                ('bsdt', models.CharField(choices=[('B/S', 'B/S'), ('D/T', 'D/T')], default='B/S', max_length=3, verbose_name='B/S D/T')),
                ('n_date', models.DateField(verbose_name='Date Needed')),
                ('d_date', models.DateField(blank=True, null=True, verbose_name='Date Delivered')),
                ('priority', models.CharField(max_length=50, verbose_name='Priority')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.jobsite', verbose_name='Job Site')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'historical Gravel Order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConcrete',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bldr', models.CharField(max_length=50, verbose_name='Builder')),
                ('lot', models.CharField(help_text='separate multiple lots with a comma (,)', max_length=100, verbose_name='Lot Numbers')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('qord', models.PositiveIntegerField(verbose_name='Quantity Ordered')),
                ('qtype', models.CharField(choices=[('Large Loads', (('loads', 'loads'), ('cu yd', 'cu yd'), ('sqft', 'sqft'))), ('lbs', 'lbs'), ('bags', 'bags')], default='loads', max_length=5, verbose_name='Quantity Type')),
                ('etot', models.PositiveIntegerField(help_text='leave blank if same as quantity ordered', verbose_name='Estimated Total')),
                ('atot', models.PositiveIntegerField(blank=True, null=True, verbose_name='Actual Total')),
                ('incw', models.CharField(choices=[('none', 'none'), ('rain', 'rain'), ('snow', 'snow')], default='none', max_length=4, verbose_name='Inclimate Weather')),
                ('temp', models.CharField(choices=[('average', 'average'), ('low', 'low'), ('high', 'high')], default='average', max_length=7, verbose_name='Temperature')),
                ('odate', models.DateField(blank=True, editable=False, verbose_name='Date Ordered')),
                ('ndate', models.DateField(blank=True, null=True, verbose_name='Date Needed')),
                ('ddate', models.DateField(blank=True, null=True, verbose_name='Delivery / Pour Date')),
                ('crew', models.CharField(blank=True, max_length=50, null=True, verbose_name='Delivery / Pour Crew')),
                ('po', models.CharField(help_text='PO / order number', max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('progress', models.CharField(choices=[('will call', 'will call'), ('scheduled', 'scheduled'), ('canceled', 'cncl'), ('released', 'rlsd'), ('complete', 'complete')], default='will call', max_length=10, verbose_name='Order Progress')),
                ('otype', models.CharField(choices=[('flatwork', 'flatwork'), ('footings', 'footings'), ('walls', 'walls')], max_length=8, verbose_name='Pour Type')),
                ('dsph', models.CharField(max_length=50, verbose_name='Dispatcher')),
                ('ctype', models.CharField(choices=[('mix', 'mix'), ('slump', 'slump')], max_length=5, verbose_name='Mix/Slump')),
                ('pump', models.BooleanField(default=False, verbose_name='Pump')),
                ('pinfo', models.TextField(blank=True, max_length=150, null=True, verbose_name='Pump Info')),
                ('iagt', models.CharField(blank=True, max_length=50, null=True, verbose_name='Inspection Agency')),
                ('itime', models.DateTimeField(blank=True, null=True, verbose_name='Inspection Time')),
                ('garage', models.PositiveSmallIntegerField(blank=True, help_text='only for footings', null=True, verbose_name='Garage Height (ft)')),
                ('wea', models.PositiveSmallIntegerField(blank=True, help_text='only for footings', null=True, verbose_name='Walkout Egress Area (ft)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job_site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.jobsite', verbose_name='Job Site')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'historical Concrete Order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Gravel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bldr', models.CharField(max_length=50, verbose_name='Builder')),
                ('lot', models.CharField(help_text='separate multiple lots with a comma (,)', max_length=100, verbose_name='Lot Numbers')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('qord', models.PositiveIntegerField(verbose_name='Quantity Ordered')),
                ('qtype', models.CharField(choices=[('Large Loads', (('loads', 'loads'), ('cu yd', 'cu yd'), ('sqft', 'sqft'))), ('lbs', 'lbs'), ('bags', 'bags')], default='loads', max_length=5, verbose_name='Quantity Type')),
                ('etot', models.PositiveIntegerField(help_text='leave blank if same as quantity ordered', verbose_name='Estimated Total')),
                ('atot', models.PositiveIntegerField(blank=True, null=True, verbose_name='Actual Total')),
                ('incw', models.CharField(choices=[('none', 'none'), ('rain', 'rain'), ('snow', 'snow')], default='none', max_length=4, verbose_name='Inclimate Weather')),
                ('temp', models.CharField(choices=[('average', 'average'), ('low', 'low'), ('high', 'high')], default='average', max_length=7, verbose_name='Temperature')),
                ('odate', models.DateField(auto_now=True, verbose_name='Date Ordered')),
                ('ndate', models.DateField(blank=True, null=True, verbose_name='Date Needed')),
                ('ddate', models.DateField(blank=True, null=True, verbose_name='Delivery / Pour Date')),
                ('crew', models.CharField(blank=True, max_length=50, null=True, verbose_name='Delivery / Pour Crew')),
                ('po', models.CharField(help_text='PO / order number', max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('progress', models.CharField(choices=[('will call', 'will call'), ('scheduled', 'scheduled'), ('canceled', 'cncl'), ('released', 'rlsd'), ('complete', 'complete')], default='will call', max_length=10, verbose_name='Order Progress')),
                ('caller', models.CharField(max_length=50, verbose_name='Caller')),
                ('bsdt', models.CharField(choices=[('B/S', 'B/S'), ('D/T', 'D/T')], default='B/S', max_length=3, verbose_name='B/S D/T')),
                ('n_date', models.DateField(verbose_name='Date Needed')),
                ('d_date', models.DateField(blank=True, null=True, verbose_name='Date Delivered')),
                ('priority', models.CharField(max_length=50, verbose_name='Priority')),
                ('job_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gravel_orders', to='jobs.jobsite', verbose_name='Job Site')),
                ('notes', models.ManyToManyField(related_name='gravel_orders', to='orders.ordernotes', verbose_name='order notes')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Gravel Order',
                'verbose_name_plural': 'Gravel Orders',
                'db_table': 'g_orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Concrete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bldr', models.CharField(max_length=50, verbose_name='Builder')),
                ('lot', models.CharField(help_text='separate multiple lots with a comma (,)', max_length=100, verbose_name='Lot Numbers')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('qord', models.PositiveIntegerField(verbose_name='Quantity Ordered')),
                ('qtype', models.CharField(choices=[('Large Loads', (('loads', 'loads'), ('cu yd', 'cu yd'), ('sqft', 'sqft'))), ('lbs', 'lbs'), ('bags', 'bags')], default='loads', max_length=5, verbose_name='Quantity Type')),
                ('etot', models.PositiveIntegerField(help_text='leave blank if same as quantity ordered', verbose_name='Estimated Total')),
                ('atot', models.PositiveIntegerField(blank=True, null=True, verbose_name='Actual Total')),
                ('incw', models.CharField(choices=[('none', 'none'), ('rain', 'rain'), ('snow', 'snow')], default='none', max_length=4, verbose_name='Inclimate Weather')),
                ('temp', models.CharField(choices=[('average', 'average'), ('low', 'low'), ('high', 'high')], default='average', max_length=7, verbose_name='Temperature')),
                ('odate', models.DateField(auto_now=True, verbose_name='Date Ordered')),
                ('ndate', models.DateField(blank=True, null=True, verbose_name='Date Needed')),
                ('ddate', models.DateField(blank=True, null=True, verbose_name='Delivery / Pour Date')),
                ('crew', models.CharField(blank=True, max_length=50, null=True, verbose_name='Delivery / Pour Crew')),
                ('po', models.CharField(help_text='PO / order number', max_length=50, validators=[django.core.validators.RegexValidator('[\\S\\w]')], verbose_name='Purchase Order')),
                ('progress', models.CharField(choices=[('will call', 'will call'), ('scheduled', 'scheduled'), ('canceled', 'cncl'), ('released', 'rlsd'), ('complete', 'complete')], default='will call', max_length=10, verbose_name='Order Progress')),
                ('otype', models.CharField(choices=[('flatwork', 'flatwork'), ('footings', 'footings'), ('walls', 'walls')], max_length=8, verbose_name='Pour Type')),
                ('dsph', models.CharField(max_length=50, verbose_name='Dispatcher')),
                ('ctype', models.CharField(choices=[('mix', 'mix'), ('slump', 'slump')], max_length=5, verbose_name='Mix/Slump')),
                ('pump', models.BooleanField(default=False, verbose_name='Pump')),
                ('pinfo', models.TextField(blank=True, max_length=150, null=True, verbose_name='Pump Info')),
                ('iagt', models.CharField(blank=True, max_length=50, null=True, verbose_name='Inspection Agency')),
                ('itime', models.DateTimeField(blank=True, null=True, verbose_name='Inspection Time')),
                ('garage', models.PositiveSmallIntegerField(blank=True, help_text='only for footings', null=True, verbose_name='Garage Height (ft)')),
                ('wea', models.PositiveSmallIntegerField(blank=True, help_text='only for footings', null=True, verbose_name='Walkout Egress Area (ft)')),
                ('job_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concrete_orders', to='jobs.jobsite', verbose_name='Job Site')),
                ('notes', models.ManyToManyField(related_name='concrete_orders', to='orders.ordernotes', verbose_name='order notes')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suppliers.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Concrete Order',
                'verbose_name_plural': 'Concrete Orders',
                'db_table': 'c_orders',
                'managed': True,
            },
        ),
    ]
